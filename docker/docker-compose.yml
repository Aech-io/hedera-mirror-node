version: '3.3'
services:
  # this is the database container
  mirror-node-postgres:
    image: postgres:11.4-alpine
    stop_signal: SIGTERM
    tty: true
    env_file:
      - .env
    volumes:
      - ./MirrorNodePostgresData:/var/lib/postgresql/data
      - ./runtime:/MirrorNodeCode
    ports:
      - 5433:5432

  # manages the database schema
  mirror-node-flyway:
    build:
      context: ./
      dockerfile: Flyway
    tty: true
    env_file:
      - .env
    volumes:
      - ./runtime:/MirrorNodeCode
    entrypoint: ["bash", "/flyway/bin/flyway-wait-for-postgres.sh"]
    depends_on:
      - mirror-node-postgres

  # this downloads balance files, its behaviour is controlled by ./config/config.json
  mirror-node-balance-downloader:
    image: adoptopenjdk:11-jre-hotspot
    working_dir: /MirrorNodeCode
    env_file:
      - .env
    volumes:
      - ./MirrorNodeData:/MirrorNodeData
      - ./runtime:/MirrorNodeCode
    command: java -Dlog4j.configurationFile=./config/log4j2.xml -cp mirrorNode.jar com.hedera.downloader.AccountBalancesDownloader

  # this processes balance files and puts the result in the database, its behaviour is controlled by ./config/config.json
  mirror-node-balance-parser:
    image: adoptopenjdk:11-jre-hotspot
    depends_on:
      - mirror-node-postgres
    environment:
      - HEDERA_MIRROR_DB_URL=jdbc:postgresql://mirror-node-postgres:5432/${POSTGRES_DB}
      - HEDERA_MIRROR_DB_USER=${POSTGRES_USER}
      - HEDERA_MIRROR_DB_PASS=${POSTGRES_PASSWORD}
      - DB_HOST=mirror-node-postgres
    working_dir: /MirrorNodeCode
    env_file:
      - .env
    volumes:
      - ./MirrorNodeData:/MirrorNodeData
      - ./runtime:/MirrorNodeCode
    command: java -Dlog4j.configurationFile=./config/log4j2.xml -cp mirrorNode.jar com.hedera.balanceFileLogger.BalanceFileLogger

  # this downloads and processes record files and puts the result in the database, its behaviour is controlled by ./config/config.json
  mirror-node-record-download-parse:
    image: adoptopenjdk:11-jre-hotspot
    depends_on:
      - mirror-node-postgres
    environment:
      - HEDERA_MIRROR_DB_URL=jdbc:postgresql://mirror-node-postgres:5432/${POSTGRES_DB}
      - HEDERA_MIRROR_DB_USER=${POSTGRES_USER}
      - HEDERA_MIRROR_DB_PASS=${POSTGRES_PASSWORD}
      - DB_HOST=mirror-node-postgres
    working_dir: /MirrorNodeCode
    env_file:
      - .env
    volumes:
      - ./MirrorNodeData:/MirrorNodeData
      - ./runtime:/MirrorNodeCode
    command: java -Dlog4j.configurationFile=./config/log4j2.xml -cp mirrorNode.jar com.hedera.downloader.DownloadAndParseRecordFiles

  # this downloads and processes event files and puts the result in the database, its behaviour is controlled by ./config/config.json
  mirror-node-event-download-parse:
    image: adoptopenjdk:11-jre-hotspot
    depends_on:
      - mirror-node-postgres
    environment:
      - HEDERA_MIRROR_DB_URL=jdbc:postgresql://mirror-node-postgres:5432/${POSTGRES_DB}
      - HEDERA_MIRROR_DB_USER=${POSTGRES_USER}
      - HEDERA_MIRROR_DB_PASS=${POSTGRES_PASSWORD}
      - DB_HOST=mirror-node-postgres
    working_dir: /MirrorNodeCode
    env_file:
      - .env
    volumes:
      - ./MirrorNodeData:/MirrorNodeData
      - ./runtime:/MirrorNodeCode
    command: java -Dlog4j.configurationFile=./config/log4j2.xml -cp mirrorNode.jar com.hedera.downloader.DownloadAndParseEventFiles

  # this downloads the latest 0.0.102 file from the network if the .env file contains the necessary information
  mirror-node-102-file-update:
    image: adoptopenjdk:11-jre-hotspot
    working_dir: /MirrorNodeCode
    env_file:
      - runtime/.102env
    volumes:
      - ./MirrorNodeData:/MirrorNodeData
      - ./runtime:/MirrorNodeCode
    command: java -Dlog4j.configurationFile=./config/log4j2.xml -cp mirrorNode.jar com.hedera.addressBook.NetworkAddressBook

  # this runs the REST API for mirror node
  mirror-node-rest-api:
    image: node:11
    working_dir: /MirrorNodeCode
    environment:
      - DB_HOST=mirror-node-postgres
    tty: true
    env_file:
      - .env
    volumes:
      - ./runtime:/MirrorNodeCode
    command: ./restapi.sh
    ports:
      - ${PORT}:${PORT}
